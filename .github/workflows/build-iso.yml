name: Build borealos installer images
on:
  workflow_dispatch:
    inputs:
      images:
        description: Image descriptors of the installers to build
        type: choice
        options:
          - '["borealos"]'
          - '["borealos-nvidia"]'
          - '["borealos", "borealos-nvidia"]'
        default: '["borealos", "borealos-nvidia"]'
      tag:
        description: Image tag to build an installer for
        type: choice
        options:
          - stable
        default: stable
  workflow_call:
    inputs:
      images:
        description: image descriptors of the installers to build
        type: string
        default: '["borealos", "borealos-nvidia"]'
      tag:
        description: Image tag to build an installer for
        type: string
        default: stable

env:
  IMAGE_REGISTRY: ghcr.io/hal7df

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}.iso
  cancel-in-progress: true

jobs:
  build-iso:
    name: Build ISO installers for ${{ matrix.image }}:${{ inputs.tag }}
    outputs:
      url: ${{ steps.upload.outputs.artifact-url }}
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson (inputs.images) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Just
        shell: bash
        run: |
          set -euxo pipefail
          JUST_VERSION=$(curl -L https://api.github.com/repos/casey/just/releases/latest | jq -r '.tag_name')
          curl -sSLO https://github.com/casey/just/releases/download/${JUST_VERSION}/just-${JUST_VERSION}-x86_64-unknown-linux-musl.tar.gz
          tar xzvf just-${JUST_VERSION}-x86_64-unknown-linux-musl.tar.gz -C /tmp just
          sudo mv /tmp/just /usr/local/bin/just
          rm -f just-${JUST_VERSION}-x86_64-unknown-linux-musl.tar.gz

      - name: Lint Justfile
        shell: bash
        run: just lint

      - name: Maximize build space
        uses: ublue-os/remove-unwanted-software@v7

      - name: Build ISO
        id: iso
        shell: bash
        run: |
          sudo just build-iso ${{ matrix.image }} ${{ inputs.tag }} 1 1
          ls -l build/output/${{ matrix.image }}-${{ inputs.tag }}.iso
          awk '{printf "sha256=%s\n", $1}' build/outputs/${{ matrix.image }}-${{ inputs.tag }}.iso.sha256 >> $GITHUB_OUTPUT
          echo $GITHUB_OUTPUT

      - name: Upload ISO as job artifact
        id: upload
        uses: actions/upload-artifact@v4
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          name: ${{ matrix.image }}-${{ inputs.tag }}.iso
          path: build/outputs/${{ matrix.image }}-${{ inputs.tag }}.iso
          if-no-files-found: warn
          retention-days: 90
          compression-level: 0
          overwrite: true

      - name: Validate checksum of uploaded ISO
        shell: bash
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          if [[ "${{ steps.iso.outputs.sha256 }}" != "${{ steps.upload.outputs.artifact-digest }}" ]]; then
            echo "Artifact upload validation failed."
            echo "Expected SHA256: ${{ steps.iso.outputs.sha256 }}"
            echo "Got SHA256: ${{ steps.upload.outputs.artifact-digest }}"
            exit 1
          else
            echo "Artifact upload validated."
          fi

      - name: Upload ISO checksum
        uses: actions/upload-artifact@v4
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          name: ${{ matrix.image }}-${{ inputs.tag }}.iso.sha256
          path: build/outputs/${{ matrix.image }}-${{ inputs.tag }}.iso.sha256
          if-no-files-found: warn
          retention-days: 90
          overwrite: true
